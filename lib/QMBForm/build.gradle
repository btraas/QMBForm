apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'


buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {

        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1"
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 2
        versionName "1.1"

        vectorDrawables.useSupportLibrary = true
        // Gradle Plugin 1.5 vectorDrawables support: stop the Gradle pluginâ€™s automatic rasterization of vectors
        // generatedDensities = []
    }
    aaptOptions {
        // Gradle Plugin 1.5 vectorDrawables support: tell aapt to keep the attribute ids around
        additionalParameters "--no-version-vectors"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    sourceSets {

        test {
            setRoot('src/test')
            res.srcDirs = ['src/test/resources']
        }

        test.java.srcDirs += 'build/generated/source/r/debug'
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'info.hoang8f:android-segmented:1.0.5'
    implementation 'com.wdullaer:materialdatetimepicker:2.5.0'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-core:1.2.1'
    testImplementation 'org.robolectric:robolectric:3.0'


    def support_version = "27.1.1"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:support-v4:$support_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

apply plugin: 'idea'

idea {
    module {
        testOutputDir = file('build/test-classes/debug')
    }
}

apply plugin: 'org.sonarqube'


sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.jdbc.url", "jdbc:mysql://localhost/sonar"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.jdbc.password", "sonar"

        property "sonar.java.binaries", "$buildDir"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"

        property 'sonar.junit.reportsPath', "$buildDir/test-results/release/"
        property "sonar.jacoco.reportPath", "$buildDir/jacoco/testDebugUnitTest.exec"
    }
}


apply plugin: "jacoco"

jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/reports/jacoco")
}

task jacocoTestReport(type: JacocoReport) {
    description = "Generates Jacoco coverage reports: XML and HTML"
    group = "Reporting"

    jacocoClasspath = project.configurations['jacocoAnt']

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*']

    def debugTree = fileTree(dir: "${project.buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec'])

    reports {
        xml {
            enabled = true
            destination = "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        }
        csv.enabled false
        html {
            enabled = true
            destination = "${project.buildDir}/reports/jacoco"
        }
    }
}

//apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.quemb'
repositories {
    mavenCentral()
    google()
}



